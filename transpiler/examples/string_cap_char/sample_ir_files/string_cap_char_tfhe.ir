package my_package

fn _ZN5State7processEh(this: (bits[1]), c: bits[8]) -> ((bits[1]), bits[8]) {
  literal.18: bits[8] = literal(value=97, id=18, pos=1,22,3)
  literal.29: bits[8] = literal(value=97, id=29, pos=1,22,52)
  literal.27: bits[8] = literal(value=65, id=27, pos=1,22,52)
  zero_ext.20: bits[32] = zero_ext(c, new_bit_count=32, id=20, pos=1,22,3)
  sign_ext.19: bits[32] = sign_ext(literal.18, new_bit_count=32, id=19, pos=1,22,3)
  literal.12: bits[8] = literal(value=122, id=12, pos=1,22,3)
  sign_ext.30: bits[32] = sign_ext(literal.29, new_bit_count=32, id=30, pos=1,22,52)
  sign_ext.28: bits[32] = sign_ext(literal.27, new_bit_count=32, id=28, pos=1,22,52)
  literal.37: bits[8] = literal(value=32, id=37, pos=1,24,3)
  tuple_index.22: bits[1] = tuple_index(this, index=0, id=22, pos=1,22,3)
  sge.21: bits[1] = sge(zero_ext.20, sign_ext.19, id=21, pos=1,22,3)
  zero_ext.14: bits[32] = zero_ext(c, new_bit_count=32, id=14, pos=1,22,3)
  sign_ext.13: bits[32] = sign_ext(literal.12, new_bit_count=32, id=13, pos=1,22,3)
  sub.31: bits[32] = sub(sign_ext.30, sign_ext.28, id=31, pos=1,22,52)
  literal.5: bits[8] = literal(value=97, id=5, pos=1,22,3)
  zero_ext.39: bits[32] = zero_ext(c, new_bit_count=32, id=39, pos=1,24,3)
  sign_ext.38: bits[32] = sign_ext(literal.37, new_bit_count=32, id=38, pos=1,24,3)
  and.23: bits[1] = and(tuple_index.22, sge.21, id=23, pos=1,22,3)
  sle.15: bits[1] = sle(zero_ext.14, sign_ext.13, id=15, pos=1,22,3)
  bit_slice.32: bits[8] = bit_slice(sub.31, start=0, width=8, id=32, pos=1,22,52)
  zero_ext.7: bits[32] = zero_ext(c, new_bit_count=32, id=7, pos=1,22,3)
  sign_ext.6: bits[32] = sign_ext(literal.5, new_bit_count=32, id=6, pos=1,22,3)
  eq.40: bits[1] = eq(zero_ext.39, sign_ext.38, id=40, pos=1,24,3)
  and.24: bits[1] = and(and.23, sle.15, id=24, pos=1,22,3)
  sub.33: bits[8] = sub(c, bit_slice.32, id=33, pos=1,22,52)
  tuple_index.9: bits[1] = tuple_index(this, index=0, id=9, pos=1,22,3)
  sge.8: bits[1] = sge(zero_ext.7, sign_ext.6, id=8, pos=1,22,3)
  literal.25: bits[8] = literal(value=97, id=25, pos=1,22,52)
  literal.43: bits[1] = literal(value=1, id=43, pos=1,25,3)
  tuple.41: (bits[1]) = tuple(eq.40, id=41, pos=1,24,3)
  sel.34: bits[8] = sel(and.24, cases=[c, sub.33], id=34)
  tuple_index.3: bits[1] = tuple_index(this, index=0, id=3, pos=1,22,3)
  zero_ext.4: bits[32] = zero_ext(c, new_bit_count=32, id=4, pos=1,22,3)
  and.10: bits[1] = and(tuple_index.9, sge.8, id=10, pos=1,22,3)
  zero_ext.11: bits[32] = zero_ext(c, new_bit_count=32, id=11, pos=1,22,3)
  tuple_index.16: bits[1] = tuple_index(this, index=0, id=16, pos=1,22,3)
  zero_ext.17: bits[32] = zero_ext(c, new_bit_count=32, id=17, pos=1,22,3)
  sign_ext.26: bits[32] = sign_ext(literal.25, new_bit_count=32, id=26, pos=1,22,52)
  tuple_index.35: bits[1] = tuple_index(this, index=0, id=35, pos=1,24,3)
  zero_ext.36: bits[32] = zero_ext(c, new_bit_count=32, id=36, pos=1,24,3)
  literal.42: bits[1] = literal(value=1, id=42)
  not.44: bits[1] = not(literal.43, id=44, pos=1,25,3)
  ret tuple.45: ((bits[1]), bits[8]) = tuple(tuple.41, sel.34, id=45, pos=1,19,1)
}

fn my_package(st: (bits[1]), c: bits[8]) -> (bits[8], (bits[1])) {
  invoke.48: ((bits[1]), bits[8]) = invoke(st, c, to_apply=_ZN5State7processEh, id=48, pos=1,29,38)
  literal.52: bits[1] = literal(value=1, id=52, pos=1,29,38)
  tuple_index.50: bits[8] = tuple_index(invoke.48, index=1, id=50, pos=1,29,38)
  tuple_index.49: (bits[1]) = tuple_index(invoke.48, index=0, id=49, pos=1,29,38)
  literal.51: bits[1] = literal(value=1, id=51)
  not.53: bits[1] = not(literal.52, id=53, pos=1,29,38)
  ret tuple.54: (bits[8], (bits[1])) = tuple(tuple_index.50, tuple_index.49, id=54, pos=1,29,1)
}